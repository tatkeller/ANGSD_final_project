library(magrittr)
library(data.table)
library(ggplot2)
library(reshape2)
genes <- data.table::fread(file = 'featureCounts.txt.summary', header = TRUE)%>% as.data.frame
names(genes) <- c('Status', 'SRR4888615','SRR4888616','SRR4888618')
assigned = genes[genes$Status == 'Assigned',]
unassigned_nofeatures = genes[genes$Status == 'Unassigned_NoFeatures',]
unassigned_ambiguity = genes[genes$Status == 'Unassigned_Ambiguity',]
print(assigned)
print(unassigned_nofeatures)
print(unassigned_ambiguity)
df = rbind(assigned,unassigned_nofeatures,unassigned_ambiguity)
df = transpose(df)
names(df) <- df[1,]
df <- df[-1,]
df$types = c('SRR4888615','SRR4888616','SRR4888618')
dfm <- melt(df[,c('types','Assigned','Unassigned_NoFeatures','Unassigned_Ambiguity')],id.vars = 1)
print(dfm)
ggplot(data = dfm, aes(x = types, y = as.integer(value), fill = variable)) + geom_bar(stat='identity', position='dodge')
library(magrittr)
library(data.table)
library(ggplot2)
library(reshape2)
genes <- data.table::fread(file = 'featureCounts.txt.summary', header = TRUE)%>% as.data.frame
names(genes) <- c('Status', 'SRR4888615','SRR4888616','SRR4888618')
assigned = genes[genes$Status == 'Assigned',]
unassigned_nofeatures = genes[genes$Status == 'Unassigned_NoFeatures',]
unassigned_ambiguity = genes[genes$Status == 'Unassigned_Ambiguity',]
df = rbind(assigned,unassigned_nofeatures,unassigned_ambiguity)
df = transpose(df)
names(df) <- df[1,]
df <- df[-1,]
df$types = c('SRR4888615','SRR4888616','SRR4888618')
dfm <- melt(df[,c('types','Assigned','Unassigned_NoFeatures','Unassigned_Ambiguity')],id.vars = 1)
ggplot(data = dfm, aes(x = types, y = as.integer(value), fill = variable)) + geom_bar(stat='identity', position='dodge')
readcounts <- read.table("featureCounts.txt", header=TRUE)
str(readcounts)
orig_names <- names(readcounts)
names(readcounts)[7:9] = c('SRR4888615','SRR4888616','SRR4888618')
library(DESeq2)
row.names(readcounts) <- make.names(readcounts$Geneid)
readcounts <- readcounts[ , -c(1:6)]
head(readcounts)
sample_info <- DataFrame(condition = gsub("_[0-9]+", "", names(readcounts)),row.names = names(readcounts) )
str(sample_info)
DESeq.ds <- DESeqDataSetFromMatrix(countData = readcounts,colData = sample_info,design = ~ condition)
head(counts(DESeq.ds))
colSums(counts(DESeq.ds))
colSums(counts(DESeq.ds)) %>% barplot
keep_genes <- rowSums(counts(DESeq.ds)) > 0
DESeq.ds <- DESeq.ds[ keep_genes, ]
par(mfrow=c(1,2))
DESeq.ds <- estimateSizeFactors(DESeq.ds)
counts.sf_normalized <- counts(DESeq.ds, normalized=TRUE)
boxplot(counts.sf_normalized, main = "SF normalized", cex = .6)
boxplot(counts(DESeq.ds), main = "read counts only", cex = .6)
par(mfrow=c(1,2))
boxplot(log2(counts(DESeq.ds)+1), notch=TRUE, main = "Non-normalized read counts", ylab="log2(read counts)", cex = .6)
## bp of size-factor normalized values
boxplot(log2(counts(DESeq.ds, normalize= TRUE) +1), notch=TRUE, main = "Size-factor-normalized read counts", ylab="log2(read counts)", cex = .6)
log.counts <- log2(counts(DESeq.ds, normalized = FALSE) + 1)
assay(DESeq.ds, "log.counts") <- log2(counts(DESeq.ds, normalized = FALSE) + 1)
log.norm.counts <- log2(counts(DESeq.ds, normalized=TRUE) + 1)
assay(DESeq.ds, "log.norm.counts") <- log.norm.counts
par(mfrow=c(1,3))
DESeq.ds[, c("SRR4888615","SRR4888616")] %>% assay(., "log.norm.counts") %>% plot(., cex=.1, main = "SRR4888615 vs. SRR4888616")
DESeq.ds[, c("SRR4888616","SRR4888618")] %>% assay(., "log.norm.counts") %>% plot(., cex=.1, main = "SRR4888616 vs SRR4888618")
DESeq.ds[, c("SRR4888615","SRR4888618")] %>% assay(., "log.norm.counts") %>% plot(., cex=.1, main = "SRR4888615 vs SRR4888618")
DESeq.rlog <- rlog(DESeq.ds, blind = TRUE)
rlog.norm.counts <- assay(DESeq.rlog)
corr_coeff <- cor(rlog.norm.counts, method = "pearson")
as.dist(1-corr_coeff, upper = TRUE) %>% as.matrix %>% pheatmap::pheatmap(., main = "Pearson correlation")
par(mfrow=c(1,2))
as.dist(1 - corr_coeff) %>% hclust %>% plot( ., labels = colnames(rlog.norm.counts), main = "rlog transformed read counts")
as.dist( 1 - cor(log.norm.counts, method = "pearson")) %>% hclust %>% plot( ., labels = colnames(log.norm.counts), main = "no rlog")
rv <- rowVars(assay(DESeq.rlog))
top_variable <- order(rv, decreasing = TRUE)[seq_len(500)]
pca <- prcomp(t(assay(DESeq.rlog)[top_variable, ]))
plotPCA(DESeq.rlog)
par(mfrow=c(1,2))
DESeq.ds <- estimateSizeFactors(DESeq.ds)
#Normalize the size factors of the samples
counts.sf_normalized <- counts(DESeq.ds, normalized=TRUE)
#Compare the normalized size factors to the read counts
boxplot(counts.sf_normalized, main = "SF normalized", cex = .6)
boxplot(counts(DESeq.ds), main = "read counts", cex = .6)
par(mfrow=c(1,2))
boxplot(log2(counts(DESeq.ds)+1), notch=TRUE, main = "Non-normalized read counts", ylab="log2(read counts)", cex = .6)
## bp of size-factor normalized values
boxplot(log2(counts(DESeq.ds, normalize= TRUE) +1), notch=TRUE, main = "Size-factor-normalized read counts", ylab="log2(read counts)", cex = .6)
log.counts <- log2(counts(DESeq.ds, normalized = FALSE) + 1)
assay(DESeq.ds, "log.counts") <- log2(counts(DESeq.ds, normalized = FALSE) + 1)
log.norm.counts <- log2(counts(DESeq.ds, normalized=TRUE) + 1)
assay(DESeq.ds, "log.norm.counts") <- log.norm.counts
par(mfrow=c(1,3))
DESeq.ds[, c("SRR4888615","SRR4888616")] %>% assay(., "log.norm.counts") %>% plot(., cex=.1, main = "SRR4888615 vs. SRR4888616")
DESeq.ds[, c("SRR4888616","SRR4888618")] %>% assay(., "log.norm.counts") %>% plot(., cex=.1, main = "SRR4888616 vs SRR4888618")
DESeq.ds[, c("SRR4888615","SRR4888618")] %>% assay(., "log.norm.counts") %>% plot(., cex=.1, main = "SRR4888615 vs SRR4888618")
DESeq.rlog <- rlog(DESeq.ds, blind = TRUE)
rlog.norm.counts <- assay(DESeq.rlog)
corr_coeff <- cor(rlog.norm.counts, method = "pearson")
as.dist(1-corr_coeff, upper = TRUE) %>% as.matrix %>% pheatmap::pheatmap(., main = "Pearson correlation")
par(mfrow=c(1,2))
as.dist(1 - corr_coeff) %>% hclust %>% plot( ., labels = colnames(rlog.norm.counts), main = "rlog transformed read counts")
as.dist( 1 - cor(log.norm.counts, method = "pearson")) %>% hclust %>% plot( ., labels = colnames(log.norm.counts), main = "no rlog")
rv <- rowVars(assay(DESeq.rlog))
top_variable <- order(rv, decreasing = TRUE)[seq_len(500)]
pca <- prcomp(t(assay(DESeq.rlog)[top_variable, ]))
plotPCA(DESeq.rlog)
corr_coeff <- cor(rlog.norm.counts, method = "pearson")
as.dist(1-corr_coeff, upper = TRUE) %>% as.matrix %>% pheatmap::pheatmap(., main = "Pearson correlation")
par(mfrow=c(1,2))
as.dist(1 - corr_coeff) %>% hclust %>% plot( ., labels = colnames(rlog.norm.counts), main = "rlog transformed read counts")
as.dist( 1 - cor(log.norm.counts, method = "pearson")) %>% hclust %>% plot( ., labels = colnames(log.norm.counts), main = "no rlog")
rv <- rowVars(assay(DESeq.rlog))
top_variable <- order(rv, decreasing = TRUE)[seq_len(500)]
pca <- prcomp(t(assay(DESeq.rlog)[top_variable, ]))
plotPCA(DESeq.rlog)
log.counts <- log2(counts(DESeq.ds, normalized = FALSE) + 1)
assay(DESeq.ds, "log.counts") <- log2(counts(DESeq.ds, normalized = FALSE) + 1)
log.norm.counts <- log2(counts(DESeq.ds, normalized=TRUE) + 1)
assay(DESeq.ds, "log.norm.counts") <- log.norm.counts
corr_coeff <- cor(rlog.norm.counts, method = "pearson")
as.dist(1-corr_coeff, upper = TRUE) %>% as.matrix %>% pheatmap::pheatmap(., main = "Pearson correlation")
rlog.norm.counts <- assay(DESeq.rlog)
corr_coeff <- cor(rlog.norm.counts, method = "pearson")
as.dist(1-corr_coeff, upper = TRUE) %>% as.matrix %>% pheatmap::pheatmap(., main = "Pearson correlation")
